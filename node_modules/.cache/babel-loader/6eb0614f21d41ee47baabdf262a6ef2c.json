{"ast":null,"code":"var _jsxFileName = \"/home/maram997/resty/src/app.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport './app.scss';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form';\nimport Results from './components/results';\nimport History from './components/history'; // since we are using use effect hook we should turn the component into a functional component\n// useState => It allows you to add state to your functional components.\n// useEffect => you tell React that your component needs to do something after render.\n// => The idea to use useEffect hook is to execute code that needs happens during lifecycle of the component instead of on specific user interactions or DOM events.\n// 1. initialState\n// 2. reducer function\n// 3.component function containing =>\n// a. useReducer\n// b. handleCase function (state,action=>containing type of the case)\n// (...) Spread syntax => Spread syntax can be used when all elements from an object or array need to be included in a list of some kind. => expand the element\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  data: '',\n  requestParams: {},\n  history: []\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"GET_API\":\n      return { ...state,\n        history: [...state.history, action.payload],\n        data: ''\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  _s();\n\n  // const [data, setData] = useState({});\n  // const [requestParams, setrequestParams] = useState({});\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  function handleGetApi() {}\n\n  function callApi(requestParams) {//setrequestParams(requestParams)\n  }\n\n  useEffect(async () => {\n    const dataFrom = await axios.get(requestParams);\n    const res = {\n      url: dataFrom.url,\n      method: dataFrom.method\n    }; //setData(res)\n  }, [requestParams]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Request Method: \", requestParams.method]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"URL: \", requestParams.url]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleApiCall: callApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 11\n  }, this);\n}\n\n_s(App, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/maram997/resty/src/app.js"],"names":["React","useState","useEffect","useReducer","axios","Header","Footer","Form","Results","History","initialState","data","requestParams","history","reducer","state","action","type","payload","App","dispatch","handleGetApi","callApi","dataFrom","get","res","url","method"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CAEA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACE;AACA;AAGF;;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,aAAa,EAAC,EAFK;AAGnBC,EAAAA,OAAO,EAAC;AAHW,CAArB;;AAMA,SAASC,OAAT,CAAiBC,KAAjB,EAAuBC,MAAvB,EAA8B;AAC5B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AAEE,aAAM,EACJ,GAAGF,KADC;AAEJF,QAAAA,OAAO,EAAC,CAAC,GAAGE,KAAK,CAACF,OAAV,EAAmBG,MAAM,CAACE,OAA1B,CAFJ;AAGJP,QAAAA,IAAI,EAAC;AAHD,OAAN;;AAMF;AACE,aAAOI,KAAP;AAVJ;AAYD;;AAGD,SAASI,GAAT,GAAc;AAAA;;AACd;AACA;AAEA,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBjB,UAAU,CAACW,OAAD,EAAUJ,YAAV,CAApC;;AAEA,WAASW,YAAT,GAAuB,CAEtB;;AACC,WAAUC,OAAV,CAAkBV,aAAlB,EAAiC,CAC/B;AAED;;AACDV,EAAAA,SAAS,CAAC,YAAW;AACnB,UAAMqB,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAUZ,aAAV,CAAvB;AACA,UAAMa,GAAG,GAAG;AACVC,MAAAA,GAAG,EAAEH,QAAQ,CAACG,GADJ;AAEVC,MAAAA,MAAM,EAAEJ,QAAQ,CAACI;AAFP,KAAZ,CAFmB,CAOjB;AAEG,GATE,EASA,CAACf,aAAD,CATA,CAAT;AAWM,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,qCAAsBA,aAAa,CAACe,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,0BAAWf,aAAa,CAACc,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,IAAD;AAAM,MAAA,aAAa,EAAEJ;AAArB;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEX;AAAf;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAnCEQ,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport './app.scss';\n\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form';\nimport Results from './components/results';\nimport History from './components/history';\n\n// since we are using use effect hook we should turn the component into a functional component\n\n\n// useState => It allows you to add state to your functional components.\n\n// useEffect => you tell React that your component needs to do something after render.\n// => The idea to use useEffect hook is to execute code that needs happens during lifecycle of the component instead of on specific user interactions or DOM events.\n\n// 1. initialState\n// 2. reducer function\n// 3.component function containing =>\n  // a. useReducer\n  // b. handleCase function (state,action=>containing type of the case)\n\n\n// (...) Spread syntax => Spread syntax can be used when all elements from an object or array need to be included in a list of some kind. => expand the element\n\nconst initialState = {\n  data: '',\n  requestParams:{},\n  history:[],\n}\n\nfunction reducer(state,action){\n  switch (action.type) {\n    case \"GET_API\":\n      \n      return{\n        ...state,\n        history:[...state.history, action.payload],\n        data:'',\n      };\n  \n    default:\n      return state;\n  }\n}\n\n\nfunction App(){\n// const [data, setData] = useState({});\n// const [requestParams, setrequestParams] = useState({});\n\nconst [state, dispatch] = useReducer(reducer, initialState)\n\nfunction handleGetApi(){\n\n}\n  function  callApi(requestParams) {\n    //setrequestParams(requestParams)\n    \n  }\n  useEffect(async() => {\n    const dataFrom = await axios.get(requestParams)\n    const res = {\n      url: dataFrom.url,\n      method: dataFrom.method,\n    \n    }\n      //setData(res)\n          \n        }, [requestParams])\n  \n        return (\n          <React.Fragment>\n            <Header />\n            <div>Request Method: {requestParams.method}</div>\n            <div>URL: {requestParams.url}</div>\n            <Form handleApiCall={callApi} />\n            <Results data={data} />\n            <History/>\n            <Footer />\n          </React.Fragment>\n        );\n      }\n   \n\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}