{"ast":null,"code":"var _jsxFileName = \"/home/maram997/resty/src/app.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport './app.scss';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form';\nimport Results from './components/results';\nimport History from './components/history'; // since we are using use effect hook we should turn the component into a functional component\n// useState => It allows you to add state to your functional components.\n// useEffect => you tell React that your component needs to do something after render.\n// => The idea to use useEffect hook is to execute code that needs happens during lifecycle of the component instead of on specific user interactions or DOM events.\n// 1. initialState\n// 2. reducer function\n// 3.component function containing =>\n// a. useReducer\n// b. handleCase function (state,action=>containing type of the case)\n// * dispatch function => send off the action of object(dispatch) to a destination or for a purpose.\n// (...) Spread syntax => Spread syntax can be used when all elements from an object or array need to be included in a list of some kind. => expand the element\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  data: '',\n  requestParams: {},\n  history: []\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"GET_API\":\n      return { ...state,\n        history: [...state.history, action.payload],\n        data: {},\n        requestParams: {},\n        choosen: {}\n      };\n\n    case \"CHOOSEN_API\":\n      return { ...state,\n        choosen: state.history.filter(char => char.name === action.payload)[0]\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [requestParams, setrequestParams] = useState({});\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  async function handleGetApi(requestParams) {\n    const dataFrom = await axios.get(requestParams.url);\n    const data = {\n      url: requestParams.url,\n      method: requestParams.method,\n      results: dataFrom.data.results\n    };\n    const action = {\n      type: 'GET_API',\n      payload: data\n    };\n    dispatch(action);\n    setData(data.results);\n  }\n\n  function callApi(requestParams) {\n    setrequestParams(requestParams);\n    console.log(requestParams);\n    console.log(data);\n    console.log(history);\n  }\n\n  function choosenReq(requestParams) {\n    const action = {};\n  } // useEffect(async() => {\n  //     setData(res)\n  //       }, [requestParams])\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Request Method: \", requestParams.method]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"URL: \", requestParams.url]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleApiCall: callApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      data: state.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(History, {\n      history: state.history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 11\n  }, this);\n}\n\n_s(App, \"6Gspo8U8Fu0VXlbwEacStiZJetw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/maram997/resty/src/app.js"],"names":["React","useState","useEffect","useReducer","axios","Header","Footer","Form","Results","History","initialState","data","requestParams","history","reducer","state","action","type","payload","choosen","filter","char","name","App","setData","setrequestParams","dispatch","handleGetApi","dataFrom","get","url","method","results","callApi","console","log","choosenReq"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport './app.scss';\n\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form';\nimport Results from './components/results';\nimport History from './components/history';\n\n// since we are using use effect hook we should turn the component into a functional component\n\n\n// useState => It allows you to add state to your functional components.\n\n// useEffect => you tell React that your component needs to do something after render.\n// => The idea to use useEffect hook is to execute code that needs happens during lifecycle of the component instead of on specific user interactions or DOM events.\n\n// 1. initialState\n// 2. reducer function\n// 3.component function containing =>\n  // a. useReducer\n  // b. handleCase function (state,action=>containing type of the case)\n\n// * dispatch function => send off the action of object(dispatch) to a destination or for a purpose.\n// (...) Spread syntax => Spread syntax can be used when all elements from an object or array need to be included in a list of some kind. => expand the element\n\nconst initialState = {\n  data: '',\n  requestParams:{},\n  history:[],\n}\n\nfunction reducer(state,action){\n  switch (action.type) {\n    case \"GET_API\":\n      \n      return{\n        ...state,\n        history:[...state.history, action.payload],\n        data:{},\n        requestParams:{},\n        choosen:{}\n      };\n      case \"CHOOSEN_API\":\n      \n      return{\n        ...state,\n        choosen: state.history.filter(\n          (char) => char.name === action.payload\n        )[0]\n      };\n  \n    default:\n      return state;\n  }\n}\n\n\nfunction App(){\n const [data, setData] = useState(null);\n const [requestParams, setrequestParams] = useState({});\n\nconst [state, dispatch] = useReducer(reducer, initialState)\n\nasync function handleGetApi(requestParams){\n  const dataFrom = await axios.get(requestParams.url)\n  const data = {\n    url:requestParams.url,\n    method: requestParams.method,\n    results: dataFrom.data.results\n  \n  }\n  const action = {\n    type: 'GET_API',\n    payload: data\n  }\n  dispatch(action);\n   setData(data.results)\n}\n  function  callApi(requestParams) {\n    setrequestParams(requestParams)\n    console.log(requestParams);\n    console.log(data);\n    console.log(history);\n  }\n\n  function choosenReq(requestParams){\n    const action = {\n\n    }\n\n  }\n  // useEffect(async() => {\n\n  //     setData(res)\n          \n  //       }, [requestParams])\n  \n        return (\n          <React.Fragment>\n            <Header />\n            <div>Request Method: {requestParams.method}</div>\n            <div>URL: {requestParams.url}</div>\n            <Form handleApiCall={callApi} />\n            <Results data={state.data} />\n            <History history={state.history}/>\n            <Footer />\n          </React.Fragment>\n        );\n      }\n   \n\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}